name: Integration Tests

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test (${{ matrix.integration.name}})
    runs-on: ${{ matrix.integration.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        integration:
            - name: Fixtures
              os: ubuntu
              target: ./test
            - name: SSH
              os: ubuntu
              target: ./...
              tags: ssh
              run: '^TestSSH'
              requires_setup: true
              setup_script: .github/scripts/setup/ssh.sh
            - name: SOPS
              os: ubuntu
              target: ./...
              tags: sops
              run: '^TestSOPS'
              requires_setup: true
              setup_script: .github/scripts/setup/sops.sh
            - name: Tflint
              os: ubuntu
              target: ./...
              tags: tflint
              run: '^TestTflint'
              requires_setup: true
              setup_script: .github/scripts/setup/tflint.sh

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup
        if: ${{ matrix.integration.requires_setup }}
        run: "${SCRIPT_PATH}"
        env:
          SCRIPT_PATH: ${{ matrix.integration.setup_script }}
          SSH_KEY: ${{ secrets.GHA_DEPLOY_KEY }}

      - name: Use mise to install dependencies
        uses: jdx/mise-action@v2
        with:
          version: 2025.4.4
        env:
          # Adding token here to reduce the likelihood of hitting rate limit issues.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Go Build Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-integration-test-${{ matrix.integration.name }}-${{ hashFiles('**/go.sum') }}

      - name: Run Tests
        run: |
            go test -v "${TAGS:+-tags $TAGS}" "${RUN:+-run $RUN}" "${TARGET}"
        shell: bash
        env:
          # Adding token here to reduce the likelihood of hitting rate limit issues.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET: ${{ matrix.integration.target }}
          TAGS: ${{ matrix.integration.tags }}
          RUN: ${{ matrix.integration.run }}
