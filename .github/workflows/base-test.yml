name: Base Tests

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use mise to install dependencies
        uses: jdx/mise-action@v2
        with:
          version: 2025.4.4
        env:
          # Adding token here to reduce the likelihood of hitting rate limit issues.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> "$GITHUB_OUTPUT"
          echo "go-mod=$(go env GOMODCACHE)" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Go Build Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-base-test-${{ hashFiles('**/go.sum') }}

      - name: Go Mod Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-base-test-${{ hashFiles('**/go.sum') }}

      - name: Install go-junit-report
        run: |
          go install github.com/jstemmer/go-junit-report/v2@v2.1.0

      - name: Run Tests
        id: run-tests
        run: |
          go test -v ./... -timeout 45m | go-junit-report > result.xml
        shell: bash
        env:
          # Adding token here to reduce the likelihood of hitting rate limit issues.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JUnit XML Report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: result.xml

      - name: Display JUnit Results with action-junit-report
        uses: mikepenz/action-junit-report@v5
        with:
          files: result.xml
