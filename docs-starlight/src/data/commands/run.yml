name: run
usage: |
  Run a command, passing arguments to an orchestrated tofu/terraform binary.

  This is the explicit, and most flexible form of running an IaC command with Terragrunt. Shortcuts can be found in "terragrunt --help" for common use-cases.
examples:
  - description: |
      Run the plan command.
    code: |
      terragrunt run plan
      # Shortcut:
      # terragrunt plan
  - description: |
      Run the plan command, and pass additional arguments.
    code: |
      terragrunt run -- output -json
      # Shortcut:
      # terragrunt output -json
subcommands:
  - name: apply
    description: Create or update infrastructure.
  - name: console
    description: Try OpenTofu/Terraform expressions at an interactive command prompt.
  - name: destroy
    description: Destroy previously-created infrastructure.
  - name: fmt
    description: Reformat your configuration in the standard style.
  - name: get
    description: Install or upgrade remote OpenTofu/Terraform modules.
  - name: graph
    description: Generate a Graphviz graph of the steps in an operation.
  - name: import
    description: Associate existing infrastructure with a OpenTofu/Terraform resource.
  - name: init
    description: Prepare your working directory for other commands.
  - name: login
    description: Obtain and save credentials for a remote host.
  - name: logout
    description: Remove locally-stored credentials for a remote host.
  - name: metadata
    description: Metadata related commands.
  - name: output
    description: Show output values from your root module.
  - name: plan
    description: Show changes required by the current configuration.
  - name: providers
    description: Show the providers required for this configuration.
  - name: refresh
    description: Update the state to match remote systems.
  - name: show
    description: Show the current state or a saved plan.
  - name: taint
    description: Mark a resource instance as not fully functional.
  - name: test
    description: Execute integration tests for OpenTofu/Terraform modules.
  - name: version
    description: Show the current OpenTofu/Terraform version.
  - name: validate
    description: Check whether the configuration is valid.
  - name: untaint
    description: Remove the 'tainted' state from a resource instance.
  - name: workspace
    description: Workspace management.
  - name: force-unlock
    description: Release a stuck lock on the current workspace.
  - name: state
    description: Advanced state management.
flags:
  - name: all
    description: Run the specified OpenTofu/Terraform command on the stack of units in the current directory.
    env:
      - TG_ALL
  - name: auth-provider-cmd value
    description: Run the provided command and arguments to authenticate Terragrunt dynamically when necessary.
    env:
      - TG_AUTH_PROVIDER_CMD
  - name: backend-require-bootstrap
    description: When this flag is set Terragrunt will fail if the remote state bucket needs to be created.
    env:
      - TG_BACKEND_REQUIRE_BOOTSTRAP
  - name: config value
    description: The path to the Terragrunt config file. Default is terragrunt.hcl.
    env:
      - TG_CONFIG
  - name: dependency-fetch-output-from-state
    description: The option fetches dependency output directly from the state file instead of using tofu/terraform output.
    env:
      - TG_DEPENDENCY_FETCH_OUTPUT_FROM_STATE
  - name: disable-bucket-update
    description: When this flag is set Terragrunt will not update the remote state bucket.
    env:
      - TG_DISABLE_BUCKET_UPDATE
  - name: disable-command-validation
    description: When this flag is set, Terragrunt will not validate the tofu/terraform command.
    env:
      - TG_DISABLE_COMMAND_VALIDATION
  - name: download-dir value
    description: The path to download OpenTofu/Terraform modules into. Default is .terragrunt-cache in the working directory.
    env:
      - TG_DOWNLOAD_DIR
  - name: engine-cache-path value
    description: Cache path for Terragrunt engine files.
    env:
      - TG_ENGINE_CACHE_PATH
  - name: engine-log-level value
    description: Terragrunt engine log level.
    env:
      - TG_ENGINE_LOG_LEVEL
  - name: engine-skip-check
    description: Skip checksum check for Terragrunt engine files.
    env:
      - TG_ENGINE_SKIP_CHECK
  - name: experimental-engine
    description: Enable Terragrunt experimental engine.
    env:
      - TG_EXPERIMENTAL_ENGINE
  - name: feature value
    description: Set feature flags for the HCL code.
    env:
      - TG_FEATURE
  - name: graph
    description: Run the specified OpenTofu/Terraform command following the Directed Acyclic Graph (DAG) of dependencies.
    env:
      - TG_GRAPH
  - name: iam-assume-role value
    description: Assume the specified IAM role before executing OpenTofu/Terraform.
    env:
      - TG_IAM_ASSUME_ROLE
  - name: iam-assume-role-duration value
    description: Session duration for IAM Assume Role session.
    env:
      - TG_IAM_ASSUME_ROLE_DURATION
  - name: iam-assume-role-session-name value
    description: Name for the IAM Assumed Role session.
    env:
      - TG_IAM_ASSUME_ROLE_SESSION_NAME
  - name: iam-assume-role-web-identity-token value
    description: For AssumeRoleWithWebIdentity, the WebIdentity token.
    env:
      - TG_IAM_ASSUME_ROLE_WEB_IDENTITY_TOKEN
  - name: inputs-debug
    description: Write debug.tfvars to working folder to help root-cause issues.
    env:
      - TG_INPUTS_DEBUG
  - name: no-auto-approve
    description: Don't automatically append '-auto-approve' to the underlying OpenTofu/Terraform commands run with 'run-all'.
    env:
      - TG_NO_AUTO_APPROVE
  - name: no-auto-init
    description: Don't automatically run 'terraform/tofu init' during other terragrunt commands. You must run 'terragrunt init' manually.
    env:
      - TG_NO_AUTO_INIT
  - name: no-auto-retry
    description: Don't automatically re-run command in case of transient errors.
    env:
      - TG_NO_AUTO_RETRY
  - name: no-destroy-dependencies-check
    description: When this flag is set, Terragrunt will not check for dependent units when destroying.
    env:
      - TG_NO_DESTROY_DEPENDENCIES_CHECK
  - name: parallelism value
    description: Parallelism for --all commands.
    env:
      - TG_PARALLELISM
  - name: provider-cache
    description: Enables Terragrunt's provider caching.
    env:
      - TG_PROVIDER_CACHE
  - name: provider-cache-dir value
    description: The path to the Terragrunt provider cache directory. By default, 'terragrunt/providers' folder in the user cache directory.
    env:
      - TG_PROVIDER_CACHE_DIR
  - name: provider-cache-hostname value
    description: The hostname of the Terragrunt Provider Cache server. By default, 'localhost'.
    env:
      - TG_PROVIDER_CACHE_HOSTNAME
  - name: provider-cache-port value
    description: The port of the Terragrunt Provider Cache server. By default, assigned automatically.
    env:
      - TG_PROVIDER_CACHE_PORT
  - name: provider-cache-registry-names value
    description: The list of remote registries to cached by Terragrunt Provider Cache server. By default, 'registry.terraform.io', 'registry.opentofu.org'.
    env:
      - TG_PROVIDER_CACHE_REGISTRY_NAMES
  - name: provider-cache-token value
    description: The token for authentication to the Terragrunt Provider Cache server. By default, assigned automatically.
    env:
      - TG_PROVIDER_CACHE_TOKEN
  - name: queue-exclude-dir value
    description: Unix-style glob of directories to exclude from the queue of Units to run.
    env:
      - TG_QUEUE_EXCLUDE_DIR
  - name: queue-exclude-external
    description: Ignore external dependencies for --all commands.
    env:
      - TG_QUEUE_EXCLUDE_EXTERNAL
  - name: queue-excludes-file value
    description: Path to a file with a list of directories that need to be excluded when running *-all commands.
    env:
      - TG_QUEUE_EXCLUDES_FILE
  - name: queue-ignore-dag-order
    description: Ignore DAG order for --all commands.
    env:
      - TG_QUEUE_IGNORE_DAG_ORDER
  - name: queue-ignore-errors
    description: Continue processing Units even if a dependency fails.
    env:
      - TG_QUEUE_IGNORE_ERRORS
  - name: queue-include-dir value
    description: Unix-style glob of directories to include from the queue of Units to run.
    env:
      - TG_QUEUE_INCLUDE_DIR
  - name: queue-include-external
    description: Include external dependencies for --all commands without asking.
    env:
      - TG_QUEUE_INCLUDE_EXTERNAL
  - name: queue-include-units-reading value
    description: If flag is set, 'run-all' will only run the command against Terragrunt units that read the specified file via an HCL function or include.
    env:
      - TG_QUEUE_INCLUDE_UNITS_READING
  - name: queue-strict-include
    description: If flag is set, only modules under the directories passed in with '--include-dir' will be included.
    env:
      - TG_QUEUE_STRICT_INCLUDE
  - name: source value
    description: Download OpenTofu/Terraform configurations from the specified source into a temporary folder, and run Terraform in that temporary folder.
    env:
      - TG_SOURCE
  - name: source-map value
    description: Replace any source URL (including the source URL of a config pulled in with dependency blocks) that has root source with dest.
    env:
      - TG_SOURCE_MAP
  - name: source-update
    description: Delete the contents of the temporary folder to clear out any old, cached source code before downloading new source code into it.
    env:
      - TG_SOURCE_UPDATE
  - name: tf-forward-stdout
    description: If specified, the output of OpenTofu/Terraform commands will be printed as is, without being integrated into the Terragrunt log.
    env:
      - TG_TF_FORWARD_STDOUT
  - name: tf-path value
    description: Path to the OpenTofu/Terraform binary. Default is tofu (on PATH).
    env:
      - TG_TF_PATH
  - name: units-that-include value
    description: If flag is set, 'run-all' will only run the command against Terragrunt modules that include the specified file.
    env:
      - TG_UNITS_THAT_INCLUDE
  - name: use-partial-parse-config-cache
    description: Enables caching of includes during partial parsing operations. Will also be used for the --iam-role option if provided.
    env:
      - TG_USE_PARTIAL_PARSE_CONFIG_CACHE
experiment:
  control: cli-redesign
  name: CLI Redesign
